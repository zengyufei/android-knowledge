<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView

    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_margin="16dp"
    app:cardCornerRadius="8dp"
    app:cardElevation="4dp">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:padding="16dp">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginBottom="16dp"
            android:text="标准按钮-空心组"
            android:textSize="18sp"
            android:textStyle="bold" />

        <GridLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:columnCount="2"
            android:useDefaultMargins="true">


            <!-- 
            com.google.android.material.button.MaterialButton标签的作用:
            - 创建符合Material Design规范的按钮
            - 提供丰富的自定义选项和样式
            
            其他常用属性:
            1. app:icon: 设置按钮图标
            2. app:iconGravity: 控制图标位置
            3. app:rippleColor: 设置涟漪效果颜色
            4. app:strokeColor: 设置边框颜色
            5. app:strokeWidth: 设置边框宽度
            
            属性作用和用法:
            - icon: 如"@drawable/ic_favorite"，添加图标
            - iconGravity: 如"start"，将图标放在文本前面
            - rippleColor: 如"#80FFFFFF"，设置半透明白色涟漪效果
            - strokeColor: 如"@color/colorPrimary"，设置边框颜色
            - strokeWidth: 如"2dp"，设置2dp宽的边框
            
            优点:
            - 符合Material Design规范，提升用户体验
            - 提供丰富的自定义选项
            - 支持不同的按钮样式（文本、填充、轮廓）
            
            缺点:
            - 依赖Material Components库
            - 在低版本Android系统上可能需要额外适配
            
            注意事项:
            - 确保项目依赖了最新版本的Material Components库
            - 注意不同按钮样式的使用场景
            - 合理使用图标和文本组合，提高可读性
            
            替代方案:
            1. android.widget.Button: 系统原生按钮
            2. androidx.appcompat.widget.AppCompatButton: 兼容性更好的按钮
            
            与当前方案区别:
            - Button: 样式简单，缺乏Material Design特性
            - AppCompatButton: 提供基本的向后兼容性，但功能较少
            
            改动影响:
            - 可能需要调整相关的样式和主题
            - 可能影响按钮的外观和交互行为
            - 需要确保Material Components库的正确集成
            -->
            <!-- 胶囊形按钮 -->
            <com.google.android.material.button.MaterialButton
                android:id="@+id/btn2_capsule"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="胶囊形"
                app:cornerRadius="50dp"
                style="@style/Widget.MaterialComponents.Button.OutlinedButton"
                app:icon="@android:drawable/ic_dialog_info"
                app:iconGravity="start"
                app:rippleColor="#80FFFFFF"
                app:strokeColor="@color/purple_500"
                app:strokeWidth="2dp" />

            <!-- 圆角按钮 -->
            <com.google.android.material.button.MaterialButton
                android:id="@+id/btn2_rounded"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="圆角"
                app:cornerRadius="8dp"
                style="@style/Widget.MaterialComponents.Button.OutlinedButton" />

            <!-- 直角按钮 -->
            <com.google.android.material.button.MaterialButton
                android:id="@+id/btn2_square"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="直角"
                app:cornerRadius="0dp"
                style="@style/Widget.MaterialComponents.Button.OutlinedButton" />

            <!-- 圆形按钮 -->
            <com.google.android.material.button.MaterialButton
                android:id="@+id/btn2_circle"
                android:layout_width="56dp"
                android:layout_height="56dp"
                android:text="圆"
                style="@style/Widget.MaterialComponents.Button.OutlinedButton"
                app:shapeAppearanceOverlay="@style/ShapeAppearanceOverlay.MyApp.Button.Circle" />

            <!-- 椭圆形按钮 -->
            <com.google.android.material.button.MaterialButton
                android:id="@+id/btn2_oval"
                android:layout_width="80dp"
                android:layout_height="56dp"
                android:text="椭圆"
                style="@style/Widget.MaterialComponents.Button.OutlinedButton"
                app:shapeAppearanceOverlay="@style/ShapeAppearanceOverlay.MyApp.Button.Oval" />


        </GridLayout>


    </LinearLayout>
</androidx.cardview.widget.CardView>